// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using webapi.Entities;

namespace webapi.Context;

public partial class SistemaViajesContext : DbContext
{
    public SistemaViajesContext()
    {
    }

    public SistemaViajesContext(DbContextOptions<SistemaViajesContext> options)
        : base(options)
    {
    }

    public virtual DbSet<tbColaboradores> tbColaboradores { get; set; }

    public virtual DbSet<tbDepartamentos> tbDepartamentos { get; set; }

    public virtual DbSet<tbMunicipios> tbMunicipios { get; set; }

    public virtual DbSet<tbPantallas> tbPantallas { get; set; }

    public virtual DbSet<tbRoles> tbRoles { get; set; }

    public virtual DbSet<tbRolesXPantallas> tbRolesXPantallas { get; set; }

    public virtual DbSet<tbSucursales> tbSucursales { get; set; }

    public virtual DbSet<tbSucursalesXColaboradores> tbSucursalesXColaboradores { get; set; }

    public virtual DbSet<tbTransportistas> tbTransportistas { get; set; }

    public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }

    public virtual DbSet<tbViajes> tbViajes { get; set; }

    public virtual DbSet<tbViajesDetalles> tbViajesDetalles { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<tbColaboradores>(entity =>
        {
            entity.HasKey(e => e.cola_Id).HasName("PK_viaj_tbColaboradores_cola_Id");

            entity.ToTable("tbColaboradores", "viaj");

            entity.HasIndex(e => e.cola_Identidad, "UC_viaj_tbColaboradores_cola_Identidad").IsUnique();

            entity.Property(e => e.cola_Apellidos)
                .IsRequired()
                .HasMaxLength(300);
            entity.Property(e => e.cola_Direccion)
                .IsRequired()
                .HasMaxLength(600);
            entity.Property(e => e.cola_Estado)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.cola_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.cola_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.cola_FechaNacimiento).HasColumnType("date");
            entity.Property(e => e.cola_Identidad)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.cola_Nombres)
                .IsRequired()
                .HasMaxLength(300);
            entity.Property(e => e.cola_Sexo)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.cola_UsuaCreacionNavigation).WithMany(p => p.tbColaboradorescola_UsuaCreacionNavigation)
                .HasForeignKey(d => d.cola_UsuaCreacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_viaj_tbColaboradores_acce_tbUsuarios_cola_UsuaCreacion_usua_Id");

            entity.HasOne(d => d.cola_UsuaModificacionNavigation).WithMany(p => p.tbColaboradorescola_UsuaModificacionNavigation)
                .HasForeignKey(d => d.cola_UsuaModificacion)
                .HasConstraintName("FK_viaj_tbColaboradores_acce_tbUsuarios_cola_Modificacion_usua_Id");

            entity.HasOne(d => d.muni).WithMany(p => p.tbColaboradores)
                .HasForeignKey(d => d.muni_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_viaj_tbColaboradores_gral_tbMunicipios_muni_Id");
        });

        modelBuilder.Entity<tbDepartamentos>(entity =>
        {
            entity.HasKey(e => e.depa_Id).HasName("PK_gral_tbDepartamentos_depa_Id");

            entity.ToTable("tbDepartamentos", "gral");

            entity.HasIndex(e => e.depa_Codigo, "UC_gral_tbDepartamentos_depa_Codigo").IsUnique();

            entity.HasIndex(e => e.depa_Nombre, "UC_gral_tbDepartamentos_depa_Nombre").IsUnique();

            entity.Property(e => e.depa_Codigo)
                .IsRequired()
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.depa_Estado)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.depa_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.depa_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.depa_Nombre)
                .IsRequired()
                .HasMaxLength(100);

            entity.HasOne(d => d.depa_UsuaCreacionNavigation).WithMany(p => p.tbDepartamentosdepa_UsuaCreacionNavigation)
                .HasForeignKey(d => d.depa_UsuaCreacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gral_tbDepartamentos_acce_tbUsuarios_depa_UsuCreacion_usua_Id");

            entity.HasOne(d => d.depa_UsuaModificacionNavigation).WithMany(p => p.tbDepartamentosdepa_UsuaModificacionNavigation)
                .HasForeignKey(d => d.depa_UsuaModificacion)
                .HasConstraintName("FK_gral_tbDepartamentos_acce_tbUsuarios_depa_UsuModificacion_usua_Id");
        });

        modelBuilder.Entity<tbMunicipios>(entity =>
        {
            entity.HasKey(e => e.muni_Id).HasName("PK_gral_tbMunicipios_muni_Id");

            entity.ToTable("tbMunicipios", "gral");

            entity.HasIndex(e => e.muni_Codigo, "UC_gral_tbMunicipios_muni_Codigo").IsUnique();

            entity.HasIndex(e => new { e.muni_Nombre, e.muni_Codigo, e.depa_Id }, "UC_gral_tbMunicipios_muni_Nombre_muni_Codigo_depa_Id").IsUnique();

            entity.Property(e => e.muni_Codigo)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.muni_Estado)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.muni_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.muni_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.muni_Nombre)
                .IsRequired()
                .HasMaxLength(80);

            entity.HasOne(d => d.depa).WithMany(p => p.tbMunicipios)
                .HasForeignKey(d => d.depa_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gral_tbMunicipios_tbDepartamentos_depa_Id");

            entity.HasOne(d => d.muni_UsuaCreacionNavigation).WithMany(p => p.tbMunicipiosmuni_UsuaCreacionNavigation)
                .HasForeignKey(d => d.muni_UsuaCreacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gral_tbMunicipios_acce_tbUsuarios_muni_UsuaCreacion_usua_Id");

            entity.HasOne(d => d.muni_UsuaModificacionNavigation).WithMany(p => p.tbMunicipiosmuni_UsuaModificacionNavigation)
                .HasForeignKey(d => d.muni_UsuaModificacion)
                .HasConstraintName("FK_gral_tbMunicipios_acce_tbUsuarios_muni_UsuaModificacion_usua_Id");
        });

        modelBuilder.Entity<tbPantallas>(entity =>
        {
            entity.HasKey(e => e.pant_Id).HasName("PK_acce_tbPantallas_pant_Id");

            entity.ToTable("tbPantallas", "acce");

            entity.HasIndex(e => e.pant_Nombre, "UC_acce_tbPantallas_pant_Nombre").IsUnique();

            entity.Property(e => e.pant_Nombre)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.pant_URL).IsRequired();
        });

        modelBuilder.Entity<tbRoles>(entity =>
        {
            entity.HasKey(e => e.role_Id).HasName("PK_acce_tbRoles_role_Id");

            entity.ToTable("tbRoles", "acce");

            entity.HasIndex(e => e.role_Nombre, "UC_acce_tbRoles_role_Nombre").IsUnique();

            entity.Property(e => e.role_Estado).HasDefaultValueSql("((1))");
            entity.Property(e => e.role_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.role_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.role_Nombre)
                .IsRequired()
                .HasMaxLength(100);

            entity.HasOne(d => d.role_UsuaCreacionNavigation).WithMany(p => p.tbRolesrole_UsuaCreacionNavigation)
                .HasForeignKey(d => d.role_UsuaCreacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_acce_tbRoles_tbUsuarios_role_UsuaCreacion_usua_Id");

            entity.HasOne(d => d.role_UsuaModificacionNavigation).WithMany(p => p.tbRolesrole_UsuaModificacionNavigation)
                .HasForeignKey(d => d.role_UsuaModificacion)
                .HasConstraintName("FK_acce_tbRoles_tbUsuarios_role_Modificacion_usua_Id");
        });

        modelBuilder.Entity<tbRolesXPantallas>(entity =>
        {
            entity.HasKey(e => e.ropa_Id).HasName("PK_acce_tbRolesXPantallas_ropa_Id");

            entity.ToTable("tbRolesXPantallas", "acce");

            entity.Property(e => e.ropa_FechaCreacion).HasColumnType("datetime");

            entity.HasOne(d => d.pant).WithMany(p => p.tbRolesXPantallas)
                .HasForeignKey(d => d.pant_Id)
                .HasConstraintName("FK_acce_tbRolesXPantallas_tbPantallas_pant_Id");

            entity.HasOne(d => d.role).WithMany(p => p.tbRolesXPantallas)
                .HasForeignKey(d => d.role_Id)
                .HasConstraintName("FK_acce_tbRolesXPantallas_tbRoles_role_Id");

            entity.HasOne(d => d.ropa_UsuaCreacionNavigation).WithMany(p => p.tbRolesXPantallas)
                .HasForeignKey(d => d.ropa_UsuaCreacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_acce_tbRoles_tbUsuarios_ropa_UsuaCreacion_usua_Id");
        });

        modelBuilder.Entity<tbSucursales>(entity =>
        {
            entity.HasKey(e => e.sucu_Id).HasName("PK_gral_tbSucursales_sucu_Id");

            entity.ToTable("tbSucursales", "gral");

            entity.HasIndex(e => e.sucu_Nombre, "UC_gral_tbSucursales_sucu_Nombre").IsUnique();

            entity.Property(e => e.sucu_Direccion)
                .IsRequired()
                .HasMaxLength(600);
            entity.Property(e => e.sucu_Estado)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.sucu_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.sucu_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.sucu_Nombre)
                .IsRequired()
                .HasMaxLength(300);

            entity.HasOne(d => d.muni).WithMany(p => p.tbSucursales)
                .HasForeignKey(d => d.muni_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gral_tbSucursales_tbMunicipios_muni_Id");

            entity.HasOne(d => d.sucu_UsuaCreacionNavigation).WithMany(p => p.tbSucursalessucu_UsuaCreacionNavigation)
                .HasForeignKey(d => d.sucu_UsuaCreacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gral_tbSucursales_acce_tbUsuarios_sucu_UsuaCreacion_usua_Id");

            entity.HasOne(d => d.sucu_UsuaModificacionNavigation).WithMany(p => p.tbSucursalessucu_UsuaModificacionNavigation)
                .HasForeignKey(d => d.sucu_UsuaModificacion)
                .HasConstraintName("FK_gral_tbSucursales_acce_tbUsuarios_sucu_Modificacion_usua_Id");
        });

        modelBuilder.Entity<tbSucursalesXColaboradores>(entity =>
        {
            entity.HasKey(e => e.suco_Id).HasName("PK_viaj_tbSucursalesXColaboradores_suco_Id");

            entity.ToTable("tbSucursalesXColaboradores", "viaj");

            entity.HasIndex(e => new { e.sucu_Id, e.cola_Id }, "UC_viaj_tbSucursalesXColaboradores_sucu_Id_cola_Id").IsUnique();

            entity.Property(e => e.suco_DistanciaKm).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.suco_FechaCreacion).HasColumnType("datetime");

            entity.HasOne(d => d.cola).WithMany(p => p.tbSucursalesXColaboradores)
                .HasForeignKey(d => d.cola_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_viaj_tbSucursalesXColaboradores_tbColaboradores_sucu_Id");

            entity.HasOne(d => d.suco_UsuaCreacionNavigation).WithMany(p => p.tbSucursalesXColaboradores)
                .HasForeignKey(d => d.suco_UsuaCreacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_viaj_tbSucursalesXColaboradores_acce_tbUsuarios_suco_UsuaCreacion_usua_Id");

            entity.HasOne(d => d.sucu).WithMany(p => p.tbSucursalesXColaboradores)
                .HasForeignKey(d => d.sucu_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_viaj_tbSucursalesXColaboradores_gral_tbSucursales_sucu_Id");
        });

        modelBuilder.Entity<tbTransportistas>(entity =>
        {
            entity.HasKey(e => e.tran_Id).HasName("PK_viaj_tbTransportistas_tran_Id");

            entity.ToTable("tbTransportistas", "viaj");

            entity.HasIndex(e => e.tran_Identidad, "UC_viaj_tbTransportistas_tran_Identidad").IsUnique();

            entity.Property(e => e.tran_Apellidos)
                .IsRequired()
                .HasMaxLength(300);
            entity.Property(e => e.tran_Estado)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.tran_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.tran_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.tran_FechaNacimiento).HasColumnType("date");
            entity.Property(e => e.tran_Identidad)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.tran_Nombres)
                .IsRequired()
                .HasMaxLength(300);
            entity.Property(e => e.tran_Sexo)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.tran_TarifaKm).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.tran_UsuaCreacionNavigation).WithMany(p => p.tbTransportistastran_UsuaCreacionNavigation)
                .HasForeignKey(d => d.tran_UsuaCreacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_viaj_tbTransportistas_acce_tbUsuarios_tran_UsuaCreacion_usua_Id");

            entity.HasOne(d => d.tran_UsuaModificacionNavigation).WithMany(p => p.tbTransportistastran_UsuaModificacionNavigation)
                .HasForeignKey(d => d.tran_UsuaModificacion)
                .HasConstraintName("FK_viaj_tbTransportistas_acce_tbUsuarios_tran_Modificacion_usua_Id");
        });

        modelBuilder.Entity<tbUsuarios>(entity =>
        {
            entity.HasKey(e => e.usua_Id).HasName("PK_acce_tbUsuarios_usua_Id");

            entity.ToTable("tbUsuarios", "acce");

            entity.HasIndex(e => e.usua_Nombre, "UC_acce_tbUsuarios_usua_Nombre").IsUnique();

            entity.Property(e => e.usua_Contrasena).IsRequired();
            entity.Property(e => e.usua_Estado)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.usua_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.usua_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.usua_Imagen).IsRequired();
            entity.Property(e => e.usua_Nombre)
                .IsRequired()
                .HasMaxLength(100);

            entity.HasOne(d => d.role).WithMany(p => p.tbUsuarios)
                .HasForeignKey(d => d.role_Id)
                .HasConstraintName("FK_acce_tbUsuarios_tbRoles_role_Id");

            entity.HasOne(d => d.usua_UsuaCreacionNavigation).WithMany(p => p.Inverseusua_UsuaCreacionNavigation)
                .HasForeignKey(d => d.usua_UsuaCreacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_acce_tbUsuarios_tbUsuarios_usua_Id_usua_UsuaCreacion");

            entity.HasOne(d => d.usua_UsuaModificacionNavigation).WithMany(p => p.Inverseusua_UsuaModificacionNavigation)
                .HasForeignKey(d => d.usua_UsuaModificacion)
                .HasConstraintName("FK_acce_tbUsuarios_tbUsuarios_usua_Id_usua_Modificacion");
        });

        modelBuilder.Entity<tbViajes>(entity =>
        {
            entity.HasKey(e => e.viaj_Id).HasName("PK_viaj_tbViajes_viaj_Id");

            entity.ToTable("tbViajes", "viaj");

            entity.Property(e => e.viaj_Estado)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.viaj_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.viaj_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.viaj_FechaYHora).HasColumnType("datetime");
            entity.Property(e => e.viaj_TotalKm).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.sucu).WithMany(p => p.tbViajes)
                .HasForeignKey(d => d.sucu_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_viaj_tbViajes_gral_tbSucursales_sucu_Id");

            entity.HasOne(d => d.tran).WithMany(p => p.tbViajes)
                .HasForeignKey(d => d.tran_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_viaj_tbViajes_tbTransportistas_tran_Id");

            entity.HasOne(d => d.viaj_UsuaCreacionNavigation).WithMany(p => p.tbViajesviaj_UsuaCreacionNavigation)
                .HasForeignKey(d => d.viaj_UsuaCreacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_viaj_tbViajes_acce_tbUsuarios_viaj_UsuaCreacion_usua_Id");

            entity.HasOne(d => d.viaj_UsuaModificacionNavigation).WithMany(p => p.tbViajesviaj_UsuaModificacionNavigation)
                .HasForeignKey(d => d.viaj_UsuaModificacion)
                .HasConstraintName("FK_viaj_tbViajes_acce_tbUsuarios_viaj_Modificacion_usua_Id");
        });

        modelBuilder.Entity<tbViajesDetalles>(entity =>
        {
            entity.HasKey(e => e.vide_Id).HasName("PK_viaj_tbViajesDetalles_vide_Id");

            entity.ToTable("tbViajesDetalles", "viaj");

            entity.Property(e => e.vide_Estado)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.vide_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.vide_FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.cola).WithMany(p => p.tbViajesDetalles)
                .HasForeignKey(d => d.cola_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_viaj_tbViajesDetalles_tbColaboradores_cola_Id");

            entity.HasOne(d => d.viaj).WithMany(p => p.tbViajesDetalles)
                .HasForeignKey(d => d.viaj_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_viaj_tbViajesDetalles_tbViajes_viaj_Id");

            entity.HasOne(d => d.vide_UsuaCreacionNavigation).WithMany(p => p.tbViajesDetallesvide_UsuaCreacionNavigation)
                .HasForeignKey(d => d.vide_UsuaCreacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_viaj_tbTransportistas_acce_tbUsuarios_vide_UsuaCreacion_usua_Id");

            entity.HasOne(d => d.vide_UsuaModificacionNavigation).WithMany(p => p.tbViajesDetallesvide_UsuaModificacionNavigation)
                .HasForeignKey(d => d.vide_UsuaModificacion)
                .HasConstraintName("FK_viaj_tbTransportistas_acce_tbUsuarios_vide_UsuaModificacion_usua_Id");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}